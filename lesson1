Задача 1 Создать класс Character (персонаж игры) с полями

название персонажа
класс персонажа (войн, маг, лекарь)
урон персонажа
Создайте метод printInfo для вывода атрибутов персонажа

В мейне создайте массив на 5 объектов класса Character, заполните его объектами класса Character.
Заполнение можете сделать вручную, либо в цикле.

После заполнения выведите на консоль информацию о всех персонажах (их название, класс, урон).

Далее выполните задачи:
1. Юзер вводит с консоли требуемый класс персонажа, программа должна вывести из массива всех персонажей, чей класс совпадает с введенным с консоли.
2. Юзер вводит с консоли урон, которым должен обладать персонаж. Выведите на консоль всех персонажей, чей урон больше или равен введенному с консоли
3. Юзер вводит класс и урон. Выведите всех персонажей, чей класс совпадает с введенным и чей урон больше или равен введенному.

Задача 2 Создать класс BankAccount с полями

сумму на счету
номер счета (уникальное значение)
процент на остаток (годовой процент)
Создайте метод printInfo для вывода атрибутов счета

Создайте массив счетов на 10 элементов и заполните его рандомно. Не забудьте, что номер счета при этом не должен повторяться.
Создайте меню:
1. Вывести все счета
2. Вывести сумму на счете по номеру (юзер вводит номер)
3. Сделать перевод. Юзер вводит номер счета-отправителя, номер счета-получателя и сумму перевода. Сделайте проверку, что баланса отправителя хватает для перевода
4. Найти счет с самым большим процентом на остаток (найти целый объект)
5. Найти счет, владелец которого заработает больше всех процентов, если будет держать деньги на нем целый год. Прибыль за год вычисляется по формуле сумма на счету * процент на остаток / 100
6. Выход

Задача 3 Создать класс Calculator.
Методы:
int sum(int a, int b) - принимает 2 числа через параметры и возвращает сумму чисел
int minus(int a, int b) - возвращает разницу чисел
mult - принимает 2 числа через параметры и возвращает произведение чисел
divide - принимает 2 числа через параметры и возвращает результат деления чисел
greater - принимает 2 числа через параметры и возвращает нибольшее из двух чисел или любое из них, если числа равны
lesser - принимает 2 числа через параметры и возвращает наименьшее из двух чисел или любое из них, если числа равны
abs - принимает 1 положительное или отрицательное число и возвращает его по модулю (со знаком плюс). Модуль это число со знаком плюс. Пример: модуль числа 5 равен 5, модуль числа -5 равен 5.


В мейне создайте объект класса Calculator и меню:
1. Сложить (нужно считать два числа и вызвать метод sum)
2. Умножить (нужно считать два числа вызвать метод mult)
3. Делить (нужно считать два числа вызвать метод divide)
4. Вычесть (нужно считать два числа вызвать метод mult)
4. Наибольшее (нужно считать два числа вызвать метод greater)
5. Наименьшее (нужно считать два числа вызвать метод lesser)
6. Модуль (нужно считать одно число вызвать метод abs)
7. Выход

Задача 4 Сделать программу по вычислению уравнения вида a*x+b=c.

Создайте класс Solution с одним методов, который принимает в качестве параметров три значения: a,b,c.
Метод должен найти решение уравнения (значение x) и вернуть x в качестве результата с помощью return.

В мейне создайте считайте с консоли три числа и передайте их в метод. Выведите решение уравнения на консоль. Проверьте, что метод дает корректный ответ.

Задача 4.1 Добавьте в класс Solution еще один метод поиска наибольшего числа из двух. Метод должен иметь два числовых параметра: a,b.
Метод сравнивает числа из параметров и возвращает наибольшее из них с помощью return.

В мейне проверьте работу метода

Задача 4.2 Добавьте в класс Solution еще один метод. Метод принимает одно число через параметр и возвращает данное число, возведенное в квадрат.
В мейне проверьте работу метода


Задача 4.3 Добавьте в класс Solution еще один метод. Метод принимает одно число через параметр и возвращает его факториал.
В мейне проверьте работу метода
Алгоритм расчета факториала: https://www.rapidus.ru/factorial-calculator.html
www.rapidus.ru
Вычисление факториала числа
Программа для вычисления факториала числа.
Задача 4.4 Добавьте в класс Solution метод решения квадратных уравнений вида a*x^2 + b*x + c = 0.
Создайте метод с тремя параметрами: a,b,c.
Метод должен найти корни уравнения и вывести их на консоль.
Метод ничего не возвращает, только выводит на консоль.

В мейне проверьте работу методов.
Алгоритм решения квадратного уравнения: https://umath.ru/calc/reshenie-kvadratnogo-uravneniya/

Задача 5 Создать класс Cat с полями имя, возраст, любимое блюдо. Поле имя является обязательным, остальные нет.
Создать несколько перегруженных конструкторов, которые будут связаны между собой для инициализации полей.
Создать метод print, который будет выводить на консоль значения всех полей.
В мейне создать несколько объектов класса Cat, задействовав все конструкторы, вывести с помощью метода print значения полей каждого объекта

Задача 6 Создать класс Rectangle с полями a,b (стороны), цвет, поверхность. Поля a,b являются обязательными для заполнения, остальные нет.
Создать перегруженные версии конструкторов, с помощью которых можно проинициализировать объект разными способами, но каждый из которых включает обязательные поля.
Создать метод print, который будет выводить значения полей.
В мейне создать несколько объектов, задействуя все конструкторы и вывести информацию о них на консоль.

Задача 7 Реализовать свой аналог класса Math с методами:
- метод, возвращающий модуль числа: принимает число и возвращает его модуль.
Сделать 4 перегрузки: byte, short, int, double
- метод, возводящий a в степень b: принимает два значения:
val - число
pow - степень.
И возвращает результат - val, возведенное в степень pow.
pow всегда целое
val может быть byte, short, int, long, double